"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _universalEnv = require("universal-env");

var LONG_DELAY = 3500; // 3.5 seconds

var SHORT_DELAY = 2000; // 2 seconds

var queue = [];
var isProcessing = false;
var toastWin;

function showToastWindow(message) {
  if (!toastWin) {
    toastWin = document.createElement('div');

    for (var key in styles.container) {
      toastWin.style[key] = styles.container[key];
    }

    document.body.appendChild(toastWin);
  }

  toastWin.style.transform = 'translateX(-50%)';
  toastWin.style.webkitTransform = 'translateX(-50%)';
  toastWin.innerHTML = message; // setTimeout(() => {
  //   toastWin.style.backgroundColor = 'rgba(0, 0, 0, 0.6)';
  // }, 0);
}

function hideToastWindow() {
  if (!toastWin) {
    return;
  }

  setTimeout(function () {
    toastWin.style.transform = 'translateX(-50%) scale(0.8)';
    toastWin.style.webkitTransform = 'translateX(-50%) scale(0.8)';
  }, 0);
}

var toast = {
  push: function push(message, duration) {
    queue.push({
      message: message,
      duration: duration
    });
    this.show();
  },
  show: function show() {
    var _this = this;

    // All messages had been toasted already, so remove the toast window,
    if (!queue.length) {
      if (toastWin) {
        toastWin.parentNode.removeChild(toastWin);
      }

      toastWin = null;
      return;
    } // the previous toast is not ended yet.


    if (isProcessing) {
      return;
    }

    isProcessing = true;
    var toastInfo = queue.shift();
    showToastWindow(toastInfo.message);
    setTimeout(function () {
      hideToastWindow();
      isProcessing = false;
      setTimeout(function () {
        return _this.show();
      }, 600);
    }, toastInfo.duration);
  }
};
var Toast = {
  SHORT: SHORT_DELAY,
  LONG: LONG_DELAY,

  /*
   * @param message {String}
   * @param duration {Number}
   * @param userStyle {Object} user defined style
   */
  show: function show(message) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SHORT_DELAY;

    if (_universalEnv.isWeex) {
      var weexModal = __weex_require__('@weex-module/modal');

      if (weexModal.toast) {
        weexModal.toast({
          message: message,
          duration: Number(duration) / 1000
        });
      }
    } else {
      toast.push(message, duration);
    }
  }
};
var styles = {
  container: {
    backgroundColor: 'rgba(0, 0, 0, 0.6)',
    boxSizing: 'border-box',
    maxWidth: '80%',
    color: '#ffffff',
    padding: '8px 16px',
    position: 'fixed',
    left: '50%',
    bottom: '50%',
    fontSize: '16px',
    lineHeight: '32px',
    fontWeight: '600',
    borderRadius: '4px',
    textAlign: 'center',
    transition: 'all 0.4s ease-in-out',
    webkitTransition: 'all 0.4s ease-in-out',
    transform: 'translateX(-50%)',
    webkitTransform: 'translateX(-50%)',
    zIndex: 9999
  }
};
var _default = Toast;
exports.default = _default;
module.exports = exports["default"];